amlModuleIdentifier:
  namespace: css
  moduleName: Dimensionality Reduction
  description: Apply dimensionality reduction to dataset
  moduleVersion: 0.0.1
description: >
    Apply dimensionality reduction to dataset using one of the following algorithms:
    Sparse PCA, Incremental PCA, Kernel PCA and PCA.
isdeterministric: true
metadata:
  annotations:
    tags:
    - Unsupervised Learning
    - Matrix Decomposition
    - Statistics
    sourceCode: https://github.com/azure/amlmodules
    contact: Yassine khelifi <yassinek@microsoft.com>
inputs:
- name: Input dataset
  type: DataFrameDirectory
  port: true
- name: Number of components
  type: Integer
  description: Number of components to keep.
- name: Select dimensionality reduction algorithm to apply 
  type: Mode 
  description: Specify type of dimensionality reduction algorithm to use.
  default: PCA
  options:
  - PCA:
    - name: SVD solver
      optional: true
      type: Mode
      default: auto
      options:
      - auto
      - full
      - arpack
      - randomized
    - name: Tolerance
      type: Float
      optional: true
      default: 0.0
      descripton: Tolerance for singular values computation by arpack solver
    - name: Number of iterations for power method
      type: String
      default: auto
      optional: true
      description: Tolerance for singular values computation by arpack solver
    - name: Whiten principal components
      type: Bool
      default: False
      optional: true
  - Sparse PCA:
    - name: Alpha
      type: Integer
      optional: true
      default: 1
      description: Control sparsity. higher values lead to sparser components
    - name: Ridge alpha
      type: Float
      optional: true
      default: 0.01
      description: Control shrinkage
    - name: Maximum iterations
      type: Integer
      optional: true
      default: 1000
      description: Maximum number of iterations
    - name: Tolerance for sparce PCA
      type: Float
      optional: true
      default: 1e-08
      description: Tolerance for stopping condition
    - name: Method
      optional: true
      type: Mode
      default: lars
      description: Type of method to solve Lasso problem coordinate descent(cd), least angle regression(lars).
      options:
      - lars
      - cd
  - Incremental PCA:
    - name: Whiten principal components
      type: Bool
      default: False
      optional: true
  - Kernel PCA:
    - description: Non linear dimensionality reduction using kernels.
    - name: Kernel
      default: rbf
      optional: true
      type: Mode
      options:
      - linear
      - rbf
      - poly
      - sigmoid
      - cosine
      - precomputed
    - name: Gamma
      type: float
      optional: true
      description: kernel coefficient for rbf,poly and sigmoid kernels.
    - name: Degree
      type: Integer
      default: 3
      description: Degree for polynomial kernel.
      optional: true
    - name: Coefficient0
      type: Float
      optional: true
      default: 1.0
    - name: Eigen solver
      type: Mode
      default: auto
      optional: true
      description: Eigensolver to use.
      options:
        - auto
        - arpack
        - dense
    - name: Tolerance for kernel PCA
      type: Float
      description: arpack covergence tolerance.
      optional: true
      default: 0
    - name: Maximum number of iterations
      optional: true
      type: Integer
      description: Maximum number of iterations apply to arpack solver
    - name: Omit zero eigenvalues
      description: Remove components with corresponding zero eigenvalues
      type: Boolean
      optional: true
      default: False
- name: Seed
  type: Integer
  optional: true
  default: 123
  description: >
     Ensures uncorrelated principal components with unit component-wise variances.
outputs:
- name: Output dataset
  type: DataFrameDirectory
  port: true
- name: Transformation state
  type: ModelDirectory
  port: true
implementation:
  container:
    conda: pca_conda.yaml
    image: mcr.microsoft.com/azureml/base-gpu:intelmpi2018.3-cuda10.0-cudnn7-ubuntu16.04
    additionalIncludes: 
      - ../pca_module.py
      - ../module_parser.py
      - ../pca.py
    command: [python, pca.py] 
    args: 
    - --input-dir
    - inputPath: Input dataset
    - --output-dir
    - outputPath: Output dataset
    - --model-output-dir
    - outputPath: Transformation state
    - --seed
    - inputValue: Seed
    - --n-components
    - inputValue: Number of components
    - --pca-type
    - inputValue: Select dimensionality reduction algorithm to apply
    - - --svd-solver
      - inputValue: SVD solver
    - - --tolerance
      - inputValue: Tolerance
    - - --iterated
      - inputValue: Number of iterations for power method
    - - --sparse-alpha
      - inputValue: Alpha
    - - --ridge-alpha
      - inputValue: Ridge alpha
    - - --sparse-method
      - inputValue: Method
    - - --sparse_iterations
      - inputValue: Maximum iterations
    - - --sparse_tolerance
      - inputValue: Tolerance for sparce PCA
    - - --kernel
      - inputValue: Kernel
    - - --gamma
      - inputValue: Gamma
    - - --degree
      - inputValue: Degree
    - - --coef0
      - inputValue: Coefficient0
    - - --eigen-solver
      - inputValue: Eigen solver
    - - --kernel-tolerance 
      - inputValue: Tolerance for kernel PCA
    - - --kernel-max-iters
      - inputValue: Maximum number of iterations
    - - --omit-0-eig
      - inputValue: Omit zero eigenvalues   
    - - --whiten
      - inputValue: Whiten principal components
            
    


 